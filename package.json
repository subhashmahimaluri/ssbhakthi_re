{
  "name": "ssbhakthi-monorepo",
  "version": "1.0.0",
  "description": "SSBhakthi Monorepo - Multilingual Next.js Frontend + Node.js/GraphQL Backend",
  "private": true,
  "workspaces": [
    "frontend",
    "backend"
  ],
  "packageManager": "pnpm@10.15.0",
  "scripts": {
    "install:all": "pnpm install",
    "install:frontend": "cd frontend && pnpm install",
    "install:backend": "cd backend && pnpm install",
    "clean": "pnpm run clean:frontend && pnpm run clean:backend && rm -rf node_modules",
    "clean:frontend": "cd frontend && rm -rf .next node_modules",
    "clean:backend": "cd backend && rm -rf dist node_modules",
    "dev": "concurrently --prefix=\"{name}\" --names=\"DOCKER,BACKEND,FRONTEND-TE,FRONTEND-HI,FRONTEND-KN\" --prefix-colors=\"blue,cyan,green,yellow,magenta\" \"pnpm run docker:all:up\" \"pnpm run dev:backend\" \"pnpm run dev:frontend:te\" \"pnpm run dev:frontend:hi\" \"pnpm run dev:frontend:kn\"",
    "dev:backend": "cd backend && pnpm run dev",
    "dev:frontend": "pnpm run dev:frontend:all",
    "dev:frontend:te": "cd frontend && pnpm run dev:te",
    "dev:frontend:hi": "cd frontend && pnpm run dev:hi",
    "dev:frontend:kn": "cd frontend && pnpm run dev:kn",
    "dev:frontend:all": "cd frontend && pnpm run dev:all",
    "dev:backend-only": "pnpm run dev:backend",
    "dev:frontend-only": "pnpm run dev:frontend:all",
    "dev:with-docker": "pnpm run docker:all:up && pnpm run dev:services",
    "dev:services": "concurrently --prefix=\"{name}\" --names=\"BACKEND,FRONTEND-TE,FRONTEND-HI,FRONTEND-KN\" --prefix-colors=\"cyan,green,yellow,magenta\" \"pnpm run dev:backend\" \"pnpm run dev:frontend:te\" \"pnpm run dev:frontend:hi\" \"pnpm run dev:frontend:kn\"",
    "build": "pnpm run build:backend && pnpm run build:frontend",
    "build:backend": "cd backend && pnpm run build",
    "build:frontend": "cd frontend && pnpm run build:all",
    "build:frontend:te": "cd frontend && pnpm run build:te",
    "build:frontend:hi": "cd frontend && pnpm run build:hi",
    "build:frontend:kn": "cd frontend && pnpm run build:kn",
    "start": "concurrently --prefix=\"{name}\" --names=\"BACKEND,FRONTEND-TE,FRONTEND-HI,FRONTEND-KN\" --prefix-colors=\"cyan,green,yellow,magenta\" \"pnpm run start:backend\" \"pnpm run start:frontend:te\" \"pnpm run start:frontend:hi\" \"pnpm run start:frontend:kn\"",
    "start:backend": "cd backend && pnpm run start",
    "start:frontend": "cd frontend && pnpm run start:all",
    "start:frontend:te": "cd frontend && pnpm run start:te",
    "start:frontend:hi": "cd frontend && pnpm run start:hi",
    "start:frontend:kn": "cd frontend && pnpm run start:kn",
    "start:prod": "concurrently --prefix=\"{name}\" --names=\"BACKEND,FRONTEND-TE,FRONTEND-HI,FRONTEND-KN\" --prefix-colors=\"cyan,green,yellow,magenta\" \"pnpm run start:backend:prod\" \"pnpm run start:frontend:te\" \"pnpm run start:frontend:hi\" \"pnpm run start:frontend:kn\"",
    "start:backend:prod": "cd backend && pnpm run start:prod",
    "test": "pnpm run test:backend && pnpm run test:frontend",
    "test:backend": "cd backend && pnpm run test",
    "test:frontend": "cd frontend && pnpm run lint",
    "test:backend:coverage": "cd backend && pnpm run test:coverage",
    "test:backend:ui": "cd backend && pnpm run test:ui",
    "lint": "pnpm run lint:backend && pnpm run lint:frontend",
    "lint:backend": "cd backend && pnpm run lint",
    "lint:frontend": "cd frontend && pnpm run lint",
    "lint:fix": "pnpm run lint:fix:backend && pnpm run lint:fix:frontend",
    "lint:fix:backend": "cd backend && pnpm run lint:fix",
    "format": "pnpm run format:backend && pnpm run format:frontend",
    "format:backend": "cd backend && pnpm run format",
    "format:frontend": "cd frontend && pnpm run format",
    "format:check": "pnpm run format:check:backend && pnpm run format:check:frontend",
    "format:check:backend": "cd backend && pnpm run format:check",
    "format:check:frontend": "cd frontend && pnpm run format:check",
    "type-check": "pnpm run type-check:backend && pnpm run type-check:frontend",
    "type-check:backend": "cd backend && pnpm run type-check",
    "type-check:frontend": "cd frontend && npx tsc --noEmit",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:dev": "docker-compose up -d",
    "docker:dev:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v --remove-orphans",
    "docker:keycloak:up": "docker-compose --profile keycloak up -d",
    "docker:keycloak:down": "docker-compose --profile keycloak down",
    "docker:all:up": "docker-compose --profile keycloak up -d",
    "docker:all:down": "docker-compose --profile keycloak down",
    "docker:status": "docker-compose ps",
    "docker:backend:up": "cd backend && docker-compose up -d",
    "docker:backend:down": "cd backend && docker-compose down",
    "docker:backend:dev": "cd backend && docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d",
    "docker:backend:dev:down": "cd backend && docker-compose -f docker-compose.yml -f docker-compose.dev.yml down",
    "docker:backend:keycloak:up": "cd backend && docker compose -f docker-compose.keycloak.yml up -d",
    "docker:backend:keycloak:down": "cd backend && docker compose -f docker-compose.keycloak.yml down",
    "db:seed": "cd backend && pnpm run db:seed",
    "codegen": "cd backend && pnpm run codegen",
    "codegen:watch": "cd backend && pnpm run codegen:watch",
    "setup": "pnpm install:all && pnpm run docker:all:up && echo 'Waiting for services to start...' && sleep 10 && pnpm run db:seed",
    "quick-start": "pnpm run docker:dev && pnpm run dev",
    "full-start": "pnpm run docker:all:up && pnpm run dev",
    "stop-all": "pnpm run docker:all:down",
    "dev-reset": "pnpm run stop-all && pnpm run clean && pnpm install:all && pnpm run docker:all:up && sleep 10 && pnpm run db:seed",
    "check-ports": "echo 'Checking ports:' && lsof -i :3000,3001,3002,4000,27017,6379,8080,8081,8082 2>/dev/null || echo 'No services running on common ports'",
    "kill-ports": "echo 'Killing processes on development ports...' && lsof -ti:3000,3001,3002,4000 | xargs kill -9 2>/dev/null || echo 'No processes to kill'",
    "dev-script": "./dev.sh",
    "dev-script:setup": "./dev.sh setup",
    "dev-script:status": "./dev.sh status",
    "dev-script:stop": "./dev.sh stop"
  },
  "devDependencies": {
    "concurrently": "^9.1.2",
    "cross-env": "^7.0.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "pnpm": ">=8.0.0"
  },
  "keywords": [
    "monorepo",
    "nextjs",
    "nodejs",
    "typescript",
    "graphql",
    "multilingual",
    "mongodb",
    "redis",
    "keycloak"
  ],
  "author": "SSBhakthi Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "your-repository-url"
  }
}
