version: "3.8"

# Monorepo Docker Compose Configuration
# This file provides unified Docker service management from the root level
# It extends the existing backend Docker configurations

services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: ssbhakthi_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: devpassword123
      MONGO_INITDB_DATABASE: ssbhakthi_api
    volumes:
      - mongodb_data:/data/db
      - ./backend/docker/mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - ssbhakthi_network

  # MongoDB Admin Interface
  mongo-express:
    image: mongo-express:1-20-alpine3.19
    container_name: ssbhakthi_mongo_express
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: devpassword123
      ME_CONFIG_MONGODB_URL: mongodb://admin:devpassword123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb
    networks:
      - ssbhakthi_network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: ssbhakthi_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass devpassword123
    volumes:
      - redis_data:/data
    networks:
      - ssbhakthi_network

  # Redis Admin Interface
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ssbhakthi_redis_commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:1:devpassword123
      HTTP_USER: admin
      HTTP_PASSWORD: admin
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - ssbhakthi_network

  # Keycloak Authentication (Optional - can be started separately)
  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: ssbhakthi_keycloak
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    command: start-dev --import-realm
    volumes:
      - ./backend/infra/keycloak/import:/opt/keycloak/data/import:ro
    depends_on:
      - keycloak-postgres
    networks:
      - ssbhakthi_network
    profiles:
      - keycloak

  # PostgreSQL for Keycloak
  keycloak-postgres:
    image: postgres:15-alpine
    container_name: ssbhakthi_keycloak_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    networks:
      - ssbhakthi_network
    profiles:
      - keycloak

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  keycloak_postgres_data:
    driver: local

networks:
  ssbhakthi_network:
    driver: bridge
